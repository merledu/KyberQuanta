`timescale 1ns / 1ps
//////////////////////////////////////////////////////////////////////////////////
// Company: 
// Engineer: 
// 
// Create Date: 08/13/2024 10:35:45 AM
// Design Name: 
// Module Name: Chi
// Project Name: 
// Target Devices: 
// Tool Versions: 
// Description: 
// 
// Dependencies: 
// 
// Revision:
// Revision 0.01 - File Created
// Additional Comments:
// 
//////////////////////////////////////////////////////////////////////////////////
module Chi(
    input logic[63:0] B [0:4][0:4],
    output logic [63:0] chi [0:4][0:4]
    );
    always_comb begin
            //row1
            chi[0][0]= B[0][0] ^ {~B[1][0] & B[2][0]};
            chi[0][1]= B[0][1] ^ {~B[1][1] & B[2][1]};
            chi[0][2]= B[0][2] ^ {~B[1][2] & B[2][2]};
            chi[0][3]= B[0][3] ^ {~B[1][3] & B[2][3]};
            chi[0][4]= B[0][4] ^ {~B[1][4] & B[2][4]};
            
            //row2
            chi[1][0]= B[1][0] ^ {~B[2][0] & B[3][0]};
            chi[1][1]= B[1][1] ^ {~B[2][1] & B[3][1]};
            chi[1][2]= B[1][2] ^ {~B[2][2] & B[3][2]};
            chi[1][3]= B[1][3] ^ {~B[2][3] & B[3][3]};
            chi[1][4]= B[1][4] ^ {~B[2][4] & B[3][4]};
            
            //row3
            chi[2][0]= B[2][0] ^ {~B[3][0] & B[4][0]};
            chi[2][1]= B[2][1] ^ {~B[3][1] & B[4][1]};
            chi[2][2]= B[2][2] ^ {~B[3][2] & B[4][2]};
            chi[2][3]= B[2][3] ^ {~B[3][3] & B[4][3]};
            chi[2][4]= B[2][4] ^ {~B[3][4] & B[4][4]};
            
            //row4
            chi[3][0]= B[3][0] ^ {~B[4][0] & B[0][0]};
            chi[3][1]= B[3][1] ^ {~B[4][1] & B[0][1]};
            chi[3][2]= B[3][2] ^ {~B[4][2] & B[0][2]};
            chi[3][3]= B[3][3] ^ {~B[4][3] & B[0][3]};
            chi[3][4]= B[3][4] ^ {~B[4][4] & B[0][4]};
            
            //row5
            chi[4][0]= B[4][0] ^ {~B[0][0] & B[1][0]};
            chi[4][1]= B[4][1] ^ {~B[0][1] & B[1][1]};
            chi[4][2]= B[4][2] ^ {~B[0][2] & B[1][2]};
            chi[4][3]= B[4][3] ^ {~B[0][3] & B[1][3]};
            chi[4][4]= B[4][4] ^ {~B[0][4] & B[1][4]};
        end

endmodule
